---
import Layout from '../layouts/Layout.astro';
---

<Layout title="Antworten anzeigen">
  <main>
    <div class="button-container">
      <button class="filter-button" data-type="Feedback">Feedback anzeigen</button>
      <button class="filter-button" data-type="Problem">Problem anzeigen</button>
      <button class="filter-button" data-type="Verbesserungsvorschlag">Verbesserungsvorschläge anzeigen</button>
      <button class="filter-button" data-type="Bewertung">Bewertungen anzeigen</button>
    </div>
    <div id="responses"></div>
  </main>
</Layout>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const responsesContainer = document.getElementById('responses');
    const filterButtons = document.querySelectorAll('.filter-button');
    let messages = JSON.parse(localStorage.getItem('messages')) || [];

    filterButtons.forEach(button => {
      button.addEventListener('click', () => {
        const type = button.getAttribute('data-type');
        displayMessages(type);
      });
    });

    function displayMessages(type) {
      responsesContainer.innerHTML = '';
      const filteredMessages = messages.filter(msg => msg.type === type);

      if (filteredMessages.length === 0) {
        responsesContainer.innerHTML = '<p>Keine Nachrichten vorhanden.</p>';
      } else {
        filteredMessages.forEach((msg, index) => {
          const messageDiv = document.createElement('div');
          messageDiv.className = 'message';
          
          const messageType = document.createElement('h2');
          messageType.textContent = msg.type;
          messageDiv.appendChild(messageType);

          const messageContent = document.createElement('p');
          messageContent.textContent = msg.message;
          messageDiv.appendChild(messageContent);

          const messageUser = document.createElement('span');
          messageUser.textContent = `Von: ${msg.username}`;
          messageDiv.appendChild(messageUser);

          if (msg.replies && msg.replies.length > 0) {
            const repliesDiv = document.createElement('div');
            repliesDiv.className = 'replies';
            msg.replies.forEach(reply => {
              const replyDiv = document.createElement('div');
              replyDiv.className = 'reply';
              replyDiv.textContent = reply;
              repliesDiv.appendChild(replyDiv);
            });
            messageDiv.appendChild(repliesDiv);
          }

          const replyButton = document.createElement('button');
          replyButton.textContent = 'Antworten';
          replyButton.onclick = function() {
            const reply = prompt('Ihre Antwort:');
            if (reply) {
              if (!msg.replies) {
                msg.replies = [];
              }
              msg.replies.push(reply);
              localStorage.setItem('messages', JSON.stringify(messages));
              displayMessages(type);
              alert('Antwort wurde gespeichert!');
            }
          };
          messageDiv.appendChild(replyButton);

          const deleteButton = document.createElement('button');
          deleteButton.textContent = 'Löschen';
          deleteButton.onclick = function() {
            if (confirm('Sind Sie sicher, dass Sie diese Nachricht löschen möchten?')) {
              messages = messages.filter(m => m !== msg); // Nachricht aus dem Array entfernen
              localStorage.setItem('messages', JSON.stringify(messages)); // Array speichern
              displayMessages(type); // Seite aktualisieren
              alert('Nachricht wurde gelöscht!');
            }
          };
          messageDiv.appendChild(deleteButton);

          responsesContainer.appendChild(messageDiv);
        });
      }
    }
  });
</script>

<style>
  main {
    margin: auto;
    padding: 1rem;
    width: 800px;
    max-width: calc(100% - 2rem);
    color: white;
    font-size: 20px;
    line-height: 1.6;
  }

  .button-container {
    display: flex;
    justify-content: space-around;
    margin-bottom: 1rem;
  }

  .filter-button {
    padding: 1rem;
    background: var(--accent-gradient);
    color: white;
    border: none;
    border-radius: 8px;
    font-size: 1rem;
  }

  .filter-button:hover {
    background: var(--accent-dark);
  }

  .message {
    border: 1px solid #ccc;
    padding: 1rem;
    border-radius: 8px;
    margin-bottom: 1rem;
  }

  .message h2 {
    margin: 0;
    font-size: 1.2rem;
  }

  .message p {
    margin: 0.5rem 0;
  }

  .message span {
    display: block;
    font-size: 0.9rem;
    color: #aaa;
  }

  .replies {
    margin-top: 1rem;
    padding-left: 1rem;
    border-left: 2px solid #ccc;
  }

  .reply {
    margin-top: 0.5rem;
    font-size: 0.9rem;
  }

  button {
    padding: 0.5rem;
    background: var(--accent-gradient);
    color: white;
    border: none;
    border-radius: 8px;
    font-size: 1rem;
    margin-top: 1rem;
  }

  button:hover {
    background: var(--accent-dark);
  }

  .delete-button {
    background: #e74c3c;
    color: #fff;
    border: none;
    border-radius: 5px;
    padding: 0.75rem 1.5rem;
    font-size: 16px;
    cursor: pointer;
    transition: background 0.3s ease;
    margin-left: 10px; /* Abstand zum Antwort-Button */
  }

  .delete-button:hover {
    background: #c0392b;
  }
</style>
